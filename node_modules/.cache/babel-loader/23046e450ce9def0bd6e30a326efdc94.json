{"ast":null,"code":"var _jsxFileName = \"/Users/danielle/Documents/lambda-GIT/gwg/src/App.js\";\nimport React, { Component } from 'react';\nimport injectTapEventPlugin from 'react-tap-event-plugin'; // Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\n\nimport './App.css';\nimport Loginscreen from './loginscreen';\nimport DashBoard from './dashboard';\nimport axios from 'axios';\ninjectTapEventPlugin();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginPage: [],\n      uploadScreen: []\n    };\n  }\n\n  componentWillMount() {\n    var loginPage = [];\n    loginPage.push(React.createElement(Loginscreen, {\n      parentContext: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n    this.setState({\n      loginPage: loginPage\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.loginPage, this.state.uploadScreen);\n  }\n\n}\n\nif (response.data.code == 200) {\n  console.log(\"Login successfull\");\n  const dashboard = [];\n  dashboard.push(React.createElement(DashBoard, {\n    appContext: self.props.appContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n  self.props.appContext.setState({\n    loginPage: [],\n    dashboard: dashboard\n  });\n}\n\nconst style = {\n  margin: 15\n};\nexport default App;","map":{"version":3,"sources":["/Users/danielle/Documents/lambda-GIT/gwg/src/App.js"],"names":["React","Component","injectTapEventPlugin","Loginscreen","DashBoard","axios","App","constructor","props","state","loginPage","uploadScreen","componentWillMount","push","setState","render","response","data","code","console","log","dashboard","self","appContext","style","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAH,oBAAoB;;AAGpB,MAAMI,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,SAAS,EAAC,EADD;AAETC,MAAAA,YAAY,EAAC;AAFJ,KAAX;AAID;;AACDC,EAAAA,kBAAkB,GAAE;AAClB,QAAIF,SAAS,GAAE,EAAf;AACAA,IAAAA,SAAS,CAACG,IAAV,CAAe,oBAAC,WAAD;AAAa,MAAA,aAAa,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACA,SAAKC,QAAL,CAAc;AACAJ,MAAAA,SAAS,EAACA;AADV,KAAd;AAGD;;AACDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWC,SADd,EAEG,KAAKD,KAAL,CAAWE,YAFd,CADF;AAMD;;AAtByB;;AAwB5B,IAAGK,QAAQ,CAACC,IAAT,CAAcC,IAAd,IAAsB,GAAzB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAMC,SAAS,GAAC,EAAhB;AACAA,EAAAA,SAAS,CAACR,IAAV,CAAe,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAES,IAAI,CAACd,KAAL,CAAWe,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;AACAD,EAAAA,IAAI,CAACd,KAAL,CAAWe,UAAX,CAAsBT,QAAtB,CAA+B;AAACJ,IAAAA,SAAS,EAAC,EAAX;AAAcW,IAAAA,SAAS,EAACA;AAAxB,GAA/B;AACC;;AAED,MAAMG,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;AAIF,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\n// Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\nimport './App.css';\nimport Loginscreen from './loginscreen';\nimport DashBoard from './dashboard';\nimport axios from 'axios'\n\ninjectTapEventPlugin();\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      loginPage:[],\n      uploadScreen:[]\n    }\n  }\n  componentWillMount(){\n    var loginPage =[];\n    loginPage.push(<Loginscreen parentContext={this}/>);\n    this.setState({\n                  loginPage:loginPage\n                    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.loginPage}\n        {this.state.uploadScreen}\n      </div>\n    );\n  }\n}\nif(response.data.code == 200){\n  console.log(\"Login successfull\");\n  const dashboard=[];\n  dashboard.push(<DashBoard appContext={self.props.appContext}/>)\n  self.props.appContext.setState({loginPage:[],dashboard:dashboard})\n  }\n\n  const style = {\n    margin: 15,\n  };\n\nexport default App;"]},"metadata":{},"sourceType":"module"}